# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is the Mozilla Browser code.
#
# The Initial Developer of the Original Code is
# Benjamin Smedberg <bsmedberg@covad.net>
# Portions created by the Initial Developer are Copyright (C) 2004
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH          = ../..
topsrcdir      = @top_srcdir@
srcdir         = @srcdir@
VPATH          = @srcdir@
relativesrcdir = suite/locales

include $(DEPTH)/config/autoconf.mk

include $(topsrcdir)/config/config.mk

DEFINES += -DMOZ_APP_MAXVERSION=$(MOZ_APP_MAXVERSION)

_ABS_SRCDIR := $(call core_abspath,$(topsrcdir))

vpath %.xml @srcdir@/en-US/searchplugins
vpath %.xml $(LOCALE_SRCDIR)/searchplugins

SUBMAKEFILES += \
	$(DEPTH)/$(MOZ_BRANDING_DIRECTORY)/Makefile \
	$(NULL)

# This makefile uses variable overrides from the libs-% target to
# build non-default locales to non-default dist/ locations. Be aware!

PWD := $(CURDIR)

# These are defaulted to be compatible with the files the wget-en-US target
# pulls. You may override them if you provide your own files. You _must_
# override them when MOZ_PKG_PRETTYNAMES is defined - the defaults will not
# work in that case.
ZIP_IN ?= $(_ABS_DIST)/$(PACKAGE)
WIN32_INSTALLER_IN ?= $(_ABS_DIST)/$(PKG_INST_PATH)$(PKG_INST_BASENAME).exe
RETRIEVE_WINDOWS_INSTALLER = 1

MOZ_LANGPACK_EID=langpack-$(AB_CD)@seamonkey.mozilla.org

DEFINES += \
	-DMOZ_PSM=$(MOZ_PSM) \
	$(NULL)

PREF_JS_EXPORTS = $(call MERGE_FILE,suite-l10n.js)

ifeq ($(MOZ_WIDGET_TOOLKIT),cocoa)
MOZ_PKG_MAC_DSSTORE=$(_ABS_DIST)/branding/dsstore
MOZ_PKG_MAC_BACKGROUND=$(_ABS_DIST)/branding/background.png
MOZ_PKG_MAC_ICON=$(_ABS_DIST)/branding/disk.icns
MOZ_PKG_MAC_EXTRA=--symlink "/Applications:/ "
endif

ifeq (WINNT,$(OS_ARCH))
UNINSTALLER_PACKAGE_HOOK = $(RM) -r $(STAGEDIST)/uninstall; \
	$(NSINSTALL) -D $(STAGEDIST)/uninstall; \
	cp ../installer/windows/l10ngen/helper.exe $(STAGEDIST)/uninstall; \
	$(RM) $(_ABS_DIST)/l10n-stage/setup.exe; \
	cp ../installer/windows/l10ngen/setup.exe $(_ABS_DIST)/l10n-stage; \
	$(NULL)
endif

NON_OMNIJAR_FILES = \
	defaults/messenger/mailViews.dat \
	defaults/profile/localstore.rdf \
	defaults/profile/panels.rdf \
	$(NULL)

include $(topsrcdir)/config/rules.mk

include $(topsrcdir)/mozilla/toolkit/locales/l10n.mk

$(STAGEDIST): $(DIST)/branding

$(DIST)/branding:
	$(NSINSTALL) -D $@

PROFILE_FILES = \
	localstore.rdf \
	mimeTypes.rdf \
	$(NULL)

PROFILE_CHROME = userChrome-example.css userContent-example.css

NO_JA_JP_MAC_AB_CD := $(if $(filter ja-JP-mac, $(AB_CD)),ja,$(AB_CD))

BOOKMARKS_INC_FILE = $(call MERGE_FILE,profile/bookmarks.inc)
BOOKMARKS_XTRA_FILE = $(call MERGE_FILE,profile/bookmarks.extra)

# the #include in the .in file requires all to be in the same dir, sadly.
%/defaults/profile/bookmarks.html: $(BOOKMARKS_INC_FILE) $(BOOKMARKS_XTRA_FILE) generic/profile/bookmarks.html.in 
	$(SYSINSTALL) -D $(dir $@)
	$(RM) -rf profile/*bookmarks*
	$(NSINSTALL) -D profile
	cp $^ profile/
	$(PYTHON) $(MOZILLA_SRCDIR)/config/Preprocessor.py \
	  -DAB_CD=$(NO_JA_JP_MAC_AB_CD) \
	  profile/bookmarks.html.in \
	  > $@

PANELS_XTRA_FILE = $(call MERGE_FILE,profile/panels.extra)

# the #include in the .in file requires all to be in the same dir, sadly.
%/defaults/profile/panels.rdf: $(PANELS_XTRA_FILE) generic/profile/panels.rdf.in
	$(SYSINSTALL) -D $(dir $@)
	$(RM) -rf profile/panels*
	$(NSINSTALL) -D profile
	cp $^ profile/
	sed \
	  -n 's/.*<RDF:Description about="\(.*\)">.*/        <RDF:li resource="\1"\/>/p' \
	  profile/panels.extra > profile/panels-urn.inc
	$(PYTHON) $(MOZILLA_SRCDIR)/config/Preprocessor.py \
	  profile/panels.rdf.in > $@

libs:: $(FINAL_TARGET)/defaults/profile/bookmarks.html ;
libs:: $(FINAL_TARGET)/defaults/profile/panels.rdf ;

libs:: $(addprefix generic/profile/,$(PROFILE_FILES))
	$(SYSINSTALL) $(IFLAGS1) $^ $(FINAL_TARGET)/defaults/profile

libs:: $(call MERGE_FILES,$(addprefix profile/chrome/,$(PROFILE_CHROME)))
	$(SYSINSTALL) $(IFLAGS1) $^ $(FINAL_TARGET)/defaults/profile/chrome

install:: $(DESTDIR)$(mozappdir)/defaults/profile/bookmarks.html ;
install:: $(DESTDIR)$(mozappdir)/defaults/profile/panels.rdf ;

install:: $(addprefix generic/profile/,$(PROFILE_FILES))
	$(SYSINSTALL) $(IFLAGS1) $^ $(DESTDIR)$(mozappdir)/defaults/profile

install:: $(call MERGE_FILES,$(addprefix profile/chrome/,$(PROFILE_CHROME)))
	$(SYSINSTALL) $(IFLAGS1) $^ $(DESTDIR)$(mozappdir)/defaults/profile/chrome

SEARCH_PLUGINS = $(shell cat $(call MERGE_FILE,searchplugins/list.txt))

libs:: $(addsuffix .xml,$(SEARCH_PLUGINS))
	$(SYSINSTALL) $(IFLAGS1) $^ $(FINAL_TARGET)/searchplugins

install:: $(addsuffix .xml,$(SEARCH_PLUGINS))
	$(SYSINSTALL) $(IFLAGS1) $^ $(DESTDIR)$(mozappdir)/searchplugins

# Extend l10n.mk clobber-% target for our localised extensions
clobber-%:
	$(RM) -rf $(DIST)/xpi-stage/chatzilla-$* $(DIST)/xpi-stage/chatzilla-*.$*.xpi
	$(RM) -rf $(DIST)/xpi-stage/venkman-$* $(DIST)/xpi-stage/venkman-*.$*.xpi

libs-%:
	$(NSINSTALL) -D $(DIST)/install
	@$(MAKE) -C ../../mozilla/toolkit/locales libs-$* BOTH_MANIFESTS=1
	@$(MAKE) -C ../../mozilla/services/sync/locales AB_CD=$* XPI_NAME=locale-$* BOTH_MANIFESTS=1
	@$(MAKE) -C ../../editor/ui/locales AB_CD=$* XPI_NAME=locale-$* BOTH_MANIFESTS=1
	@if test -d ../../mozilla/extensions/irc; then \
	  $(MAKE) -C ../../mozilla/extensions/irc/locales libs-$*; \
	fi
	@if test -d ../../mozilla/extensions/venkman; then \
	  $(MAKE) -C ../../mozilla/extensions/venkman/locales libs-$*; \
	fi
	@$(MAKE) -C ../../mozilla/extensions/spellcheck/locales AB_CD=$* XPI_NAME=locale-$* BOTH_MANIFESTS=1
	@$(MAKE) -C ../../mozilla/intl/locales AB_CD=$* XPI_NAME=locale-$* BOTH_MANIFESTS=1
	@$(MAKE) libs AB_CD=$* XPI_NAME=locale-$* PREF_DIR=defaults/pref BOTH_MANIFESTS=1

repackage-win32-installer: WIN32_INSTALLER_OUT="$(_ABS_DIST)/$(PKG_INST_PATH)$(PKG_INST_BASENAME).exe"
repackage-win32-installer: $(WIN32_INSTALLER_IN) $(SUBMAKEFILES)
	@echo "Repackaging $(WIN32_INSTALLER_IN) into $(WIN32_INSTALLER_OUT)."
	$(MAKE) -C $(DEPTH)/$(MOZ_BRANDING_DIRECTORY) export
	$(MAKE) -C ../installer/windows CONFIG_DIR=l10ngen l10ngen/setup.exe l10ngen/7zSD.sfx
	$(MAKE) repackage-zip \
	  AB_CD=$(AB_CD) \
	  MOZ_PKG_FORMAT=SFX7Z \
	  ZIP_IN=$(WIN32_INSTALLER_IN) \
	  ZIP_OUT=$(WIN32_INSTALLER_OUT) \
	  SFX_HEADER="$(PWD)/../installer/windows/l10ngen/7zSD.sfx \
	              $(_ABS_SRCDIR)/suite/installer/windows/app.tag"

ifeq (WINNT,$(OS_ARCH))
repackage-win32-installer-%: $(WIN32_INSTALLER_IN) libs-%
	@$(MAKE) repackage-win32-installer AB_CD=$* WIN32_INSTALLER_IN=$(WIN32_INSTALLER_IN)
else
repackage-win32-installer-%: ;
endif

ifneq (,$(filter cocoa,$(MOZ_WIDGET_TOOLKIT)))
STAGEDIST = $(_ABS_DIST)/l10n-stage/$(MOZ_PKG_APPNAME)/$(_APPNAME)/Contents/MacOS
# leave out $(STAGEPATH) as we never have a universal/ subdir here
PKG_DMG_SOURCE = $(MOZ_PKG_APPNAME)
else
STAGEDIST = $(_ABS_DIST)/l10n-stage/$(MOZ_PKG_DIR)
endif

clobber-zip:
	$(RM) $(STAGEDIST)/chrome/$(AB_CD).jar \
	  $(STAGEDIST)/chrome/$(AB_CD).manifest \
	  $(STAGEDIST)/defaults/pref/suite-l10n.js
	$(RM) -rf $(STAGEDIST)/searchplugins \
	  $(STAGEDIST)/dictionaries \
	  $(STAGEDIST)/hyphenation \
	  $(STAGEDIST)/defaults/profile \
	  $(STAGEDIST)/chrome/$(AB_CD) \
	  $(STAGEDIST)/extensions/langpack-$(AB_CD)@* \
	  $(STAGEDIST)/distribution/extensions/langpack-$(AB_CD)@* \

repackage-zip: repackage-extensions

repackage-extensions: $(STAGEDIST)
	if test -d ../../mozilla/extensions/irc; then \
	  $(MAKE) -C ../../mozilla/extensions/irc/locales repackage-zip-$(AB_CD) STAGEDIST=$(STAGEDIST); \
	fi
	if test -d ../../mozilla/extensions/venkman; then \
	  $(MAKE) -C ../../mozilla/extensions/venkman/locales repackage-zip-$(AB_CD) STAGEDIST=$(STAGEDIST); \
	fi
ifdef MOZ_OMNIJAR
	$(MAKE) -C ../app pack-ext AB_CD=$(AB_CD) STAGEDIST=$(STAGEDIST);
endif

repackage-zip-%: $(ZIP_IN) $(STAGEDIST) libs-%
	@$(MAKE) repackage-zip AB_CD=$* ZIP_IN=$(ZIP_IN)

langpack: langpack-$(AB_CD)

# This is a generic target that will make a langpack, repack ZIP (+tarball)
# builds, and repack an installer if applicable. It is called from the
# tinderbox scripts. Alter it with caution.

installers-%: clobber-% langpack-% repackage-win32-installer-% repackage-zip-%
	@echo "repackaging done"

ifdef MOZ_UPDATER
libs:: $(addprefix $(LOCALE_SRCDIR)/,updater/updater.ini)
ifeq ($(OS_ARCH),WINNT)
	cat $< $(srcdir)/../installer/windows/nsis/updater_append.ini | \
	  sed -e "s/^InfoText=/Info=/" -e "s/^TitleText=/Title=/" | \
	  sed -e "s/%MOZ_APP_DISPLAYNAME%/$(MOZ_APP_DISPLAYNAME)/" > \
	  $(FINAL_TARGET)/updater.ini
else
	cat $< | \
	  sed -e "s/^InfoText=/Info=/" -e "s/^TitleText=/Title=/" | \
	  sed -e "s/%MOZ_APP_DISPLAYNAME%/$(MOZ_APP_DISPLAYNAME)/" > \
	  $(FINAL_TARGET)/updater.ini
endif
endif

ifdef MOZ_CRASHREPORTER
libs:: $(call MERGE_FILE,crashreporter/crashreporter-override.ini)
	$(SYSINSTALL) $(IFLAGS1) $^ $(FINAL_TARGET)
endif

ident:
	@printf "comm_revision "
	@$(PYTHON) $(MOZILLA_SRCDIR)/config/printconfigsetting.py \
	    $(STAGEDIST)/application.ini App SourceStamp
	@printf "moz_revision "
	@$(PYTHON) $(MOZILLA_SRCDIR)/config/printconfigsetting.py \
	    $(STAGEDIST)/platform.ini Build SourceStamp
	@printf "buildid "
	@$(PYTHON) $(MOZILLA_SRCDIR)/config/printconfigsetting.py \
	    $(STAGEDIST)/application.ini App BuildID

merge-%:
ifdef LOCALE_MERGEDIR
	$(RM) -rf $(LOCALE_MERGEDIR)
	MACOSX_DEPLOYMENT_TARGET= compare-locales -m $(LOCALE_MERGEDIR) $(srcdir)/l10n.ini $(L10NBASEDIR) $*
endif
	@echo

.PHONY: repackage-extensions
