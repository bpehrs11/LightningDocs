/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Firefox Browser Glue Service.
 *
 * The Initial Developer of the Original Code is
 * Giorgio Maone
 * Portions created by the Initial Developer are Copyright (C) 2005-2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Giorgio Maone <g.maone@informaction.com>
 *   Asaf Romano <mano@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIDOMWindow;

/**
 * ***** this is the suite version of nsIBrowserGlue *****
 * nsISuiteGlue is a dirty and rather fluid interface to host shared utility
 * methods used by suite UI code, but which are not local to a suite window.
 * The component implementing this interface is meant to be a singleton
 * (service) and should progressively replace some of the shared "glue" code
 * scattered in suite/ (e.g. bits of utilOverlay.js,
 * contentAreaUtils.js, globalOverlay.js, browser.js), avoiding dynamic
 * inclusion and initialization of a ton of JS code for *each* window.
 * Dued to its nature and origin, this interface won't probably be the most
 * elegant or stable in the mozilla codebase, but its aim is rather pragmatic:
 * 1) reducing the performance overhead which affects browser window load;
 * 2) allow global hooks (e.g. startup and shutdown observers) which survive
 * suite windows to accomplish suite-related activities, such as shutdown
 * sanitization (see bug #284086)
 */

[scriptable, uuid(2559bb36-2eef-4190-9df1-8afcfbd35bd3)]
interface nsISuiteGlue : nsISupports
{
  /**
   * Deletes privacy sensitive data according to user preferences
   *
   * @param aParentWindow an optionally null window which is the parent of the
   *        sanitization dialog (if it has to be shown per user preferences)
   *
   */
  void sanitize(in nsIDOMWindow aParentWindow);

  /**
   * Add Smart Bookmarks special queries to bookmarks menu and toolbar folder.
   */
  void ensurePlacesDefaultQueriesInitialized();
};
