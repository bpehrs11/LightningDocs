<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Mozilla Communicator client code, released
   - March 31, 1998.
   -
   - The Initial Developer of the Original Code is
   - Netscape Communications Corporation.
   - Portions created by the Initial Developer are Copyright (C) 1998-1999
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Blake Ross   <blakeross@telocity.com>
   -   Peter Annema <disttsc@bart.nl>
   -   Jeremy M. Dolan <jmd@pobox.com>
   -   Mark Banner <bugzilla@standard8.demon.co.uk>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either of the GNU General Public License Version 2 or later (the "GPL"),
   - or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the GPL or the LGPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<!DOCTYPE overlay [
<!ENTITY % debugQAEditorOverlayDTD SYSTEM "chrome://debugqa/locale/debugQAEditorOverlay.dtd">
%debugQAEditorOverlayDTD;
]>

<overlay id="debugQAEditorOverlay"
         xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <script type="application/javascript"
          src="chrome://debugQA/content/debugQAEditorOverlay.js"/>

  <menubar id="main-menubar">
    <menu id="debugMenu" label="&debugMenu.label;" insertbefore="menu_Help">
      <menupopup>
        <menuitem label="&newEditorTestPage.label;"
                  oncommand="window.openDialog('chrome://editor/content','_blank','chrome,all,dialog=no','chrome://debugqa/content/EditorInitPage.html')"/>
        <menuitem label="&textEditorCmd.label;"
                  oncommand="EditorNewPlaintext();" />
        <menuitem label="&outputTextCmd.label;"
                  oncommand="EditorGetText()"/>
        <menuitem label="&outputHTMLCmd.label;"
                  oncommand="EditorGetHTML()"/>
        <menuseparator/>
        <menuitem id="menu_pasteQuote"
                  key="pastequotationkb"
                  command="cmd_pasteQuote"/>
        <menuitem label="&editRewrapCmd.label;"
                  oncommand="try { GetCurrentEditor().rewrap(true); } catch (e) {}"/>
        <menuitem label="&editStripQuotesCmd.label;"
                  oncommand="try { GetCurrentEditor().stripCites(); } catch (e) {}"/>
        <menuitem label="&insertTextCmd.label;"
                  oncommand="EditorInsertText('All good things come to those who wait. ')"/>
        <menuitem id="menu_checkLinks" observes="cmd_checkLinks"
                  label="&checkLinksCmd.label;"/>
        <menuseparator/>
        <menu accesskey="&insertFormMenu.accesskey;" id="insertFormMenu"
              label="&insertFormMenu.label;">
          <menupopup>
            <menuitem accesskey="&insertFormCmd.accesskey;" command="cmd_form"
                      label="&insertFormCmd.label;"/>
            <menuseparator/>
            <menuitem accesskey="&insertInputTagCmd.accesskey;"
                      command="cmd_inputtag" label="&insertInputTagCmd.label;"/>
            <menuitem accesskey="&insertInputImageCmd.accesskey;"
                      command="cmd_inputimage"
                      label="&insertInputImageCmd.label;"/>
            <menuitem accesskey="&insertTextAreaCmd.accesskey;"
                      command="cmd_textarea" label="&insertTextAreaCmd.label;"/>
            <menuitem accesskey="&insertSelectCmd.accesskey;" command="cmd_select"
                      label="&insertSelectCmd.label;"/>
            <menuitem accesskey="&insertButtonCmd.accesskey;"
                      command="cmd_button" label="&insertButtonCmd.label;"/>
            <menuitem accesskey="&insertLabelCmd.accesskey;" command="cmd_label"
                      label="&insertLabelCmd.label;"/>
            <menuitem accesskey="&insertFieldSetCmd.accesskey;"
                      command="cmd_fieldset" label="&insertFieldSetCmd.label;"/>
            <menuseparator/>
            <menuitem accesskey="&insertIsIndexCmd.accesskey;"
                      command="cmd_isindex" label="&insertIsIndexCmd.label;"/>
          </menupopup>
        </menu>
        <menuitem label="&testSelectionCmd.label;"
                  oncommand="EditorTestSelection()"/>
        <menuitem label="&testTableLayoutCmd.label;"
                  oncommand="EditorTestTableLayout()"/>
        <menuitem label="&showEmbeddedCmd.label;"
                  oncommand="EditorShowEmbeddedObjects()"/>
        <menuitem label="&dumpContentCmd.label;"
                  oncommand="EditorDumpContent()"/>
        <menuitem label="&testDocumentCmd.label;"
                  oncommand="EditorTestDocument()"/>
        <menuitem label="&runUnitTestsCmd.label;"
                  oncommand="EditorUnitTests()"/>
        <menuseparator/>
        <menuitem label="&dumpUndoStack.label;"
                  oncommand="DumpUndoStack()"/>
        <menuitem label="&dumpRedoStack.label;"
                  oncommand="DumpRedoStack()"/>
        <menuitem label="&executeJSTransactionViaTxmgr.label;"
                  oncommand="ExecuteJSTransactionViaTxmgr()"/>
        <menuitem label="&executeJSTransactionViaEditor.label;"
                  oncommand="ExecuteJSTransactionViaEditor()"/>
        <menuseparator/>
        <menuitem label="&startLogCmd.label;"
                  oncommand="EditorStartLog()"/>
        <menuitem label="&stopLogCmd.label;"
                  oncommand="EditorStopLog()"/>
        <menuitem label="&runLogCmd.label;"
                  oncommand="EditorRunLog()"/>
        <menuseparator/>
        <menuitem label="&setFocusCmd.label;"
                  oncommand="window.focus()"/>
      </menupopup>
    </menu>
  </menubar>
</overlay>
