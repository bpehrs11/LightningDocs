<?xml version="1.0"?> <!-- -*- Mode: HTML; indent-tabs-mode: nil -*- --> 

<!-- ***** BEGIN LICENSE BLOCK *****
 Version: MPL 1.1/GPL 2.0/LGPL 2.1

 The contents of this file are subject to the Mozilla Public License Version
 1.1 (the "License"); you may not use this file except in compliance with
 the License. You may obtain a copy of the License at
 http://www.mozilla.org/MPL/

 Software distributed under the License is distributed on an "AS IS" basis,
 WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 for the specific language governing rights and limitations under the
 License.

 The Original Code is Mozilla Communicator client code, released
 March 31, 1998.

 The Initial Developer of the Original Code is
 Netscape Communications Corporation.
 Portions created by the Initial Developer are Copyright (C) 1998-2000
 the Initial Developer. All Rights Reserved.

 Contributor(s):
   Dean Tessman <dean_tessman@hotmail.com>

 Alternatively, the contents of this file may be used under the terms of
 either of the GNU General Public License Version 2 or later (the "GPL"),
 or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 in which case the provisions of the GPL or the LGPL are applicable instead
 of those above. If you wish to allow use of your version of this file only
 under the terms of either the GPL or the LGPL, and not to allow others to
 use your version of this file under the terms of the MPL, indicate your
 decision by deleting the provisions above and replace them with the notice
 and other provisions required by the GPL or the LGPL. If you do not delete
 the provisions above, a recipient may use your version of this file under
 the terms of any one of the MPL, the GPL or the LGPL.

 ***** END LICENSE BLOCK ***** -->


<?xml-stylesheet href="chrome://navigator/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://communicator/content/places/places.css" type="text/css"?>

<?xul-overlay href="chrome://navigator/content/navigatorOverlay.xul"?>
<?xul-overlay href="chrome://navigator/content/linkToolbarOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/contentAreaContextOverlay.xul"?>
<?xul-overlay href="chrome://communicator/content/sidebar/sidebarOverlay.xul"?>


<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd" >
%brandDTD;
<!ENTITY % navigatorDTD SYSTEM "chrome://navigator/locale/navigator.dtd" >
%navigatorDTD;
]>

<window id="main-window"
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="Startup()" onunload="Shutdown()"
        onclose="return WindowIsClosing();"
        contenttitlesetting="true"
        title="&mainWindow.title;" 
        titlemodifier="&mainWindow.titlemodifier;" 
        titlemenuseparator="&mainWindow.titlemodifiermenuseparator;"
        toggletoolbar="true"
        lightweightthemes="true"
        lightweightthemesfooter="status-bar"
        windowtype="navigator:browser"
        persist="screenX screenY width height sizemode"> 

  <!-- Generic Utility -->
  <script type="application/javascript" src="chrome://global/content/nsUserSettings.js"/>
  <script type="application/javascript" src="chrome://global/content/nsClipboard.js"/>
  <script type="application/javascript" src="chrome://global/content/nsDragAndDrop.js"/>
  <script type="application/javascript" src="chrome://global/content/viewSourceUtils.js"/>

  <!-- Content Area -->
  <script type="application/javascript" src="chrome://navigator/content/nsBrowserStatusHandler.js"/>
  <script type="application/javascript" src="chrome://navigator/content/nsBrowserContentListener.js"/>
  <script type="application/javascript" src="chrome://communicator/content/contentAreaClick.js"/>
  <script type="application/javascript" src="chrome://communicator/content/findUtils.js"/>
  <script type="application/javascript" src="chrome://global/content/printUtils.js"/>

  <!-- Navigator -->
  <script type="application/javascript" src="chrome://navigator/content/fullScreen.js"/>
  <script type="application/javascript" src="chrome://navigator/content/navigatorDD.js"/>
  <script type="application/javascript" src="chrome://navigator/content/sessionHistoryUI.js"/>

  <!-- Places Bookmarks Utilities -->
  <script type="application/javascript" src="chrome://communicator/content/bookmarks/editBookmarkOverlay.js"/>

  <!-- hook for stringbundle overlays -->
  <stringbundleset id="stringbundleset">
    <stringbundle id="findBundle" src="chrome://global/locale/finddialog.properties"/>
  </stringbundleset>

  <commandset id="commands">
    <commandset id="findTypeMenuItems"/>
    <command id="toggleSidebar"/>
  </commandset>

  <commandset id="mainCommandSet"/> <!-- Firefox extension compatibility -->

  <!-- broadcasters are appended from the overlay -->
  <broadcasterset id="navBroadcasters"/>
  <broadcasterset id="mainBroadcasterSet"/> <!-- Firefox extension compatibility -->

  <!-- keys are appended from the overlay -->
  <keyset id="navKeys">
    <key id="showHideSidebar"/>
  </keyset>
  <keyset id="mainKeyset"/> <!-- Firefox extension compatibility -->

  <popupset id="mainPopupSet">
    <menupopup id="backMenu"
           position="after_start"
           onpopupshowing="return BrowserBackMenu(event);"
           oncommand="gotoHistoryIndex(event);"
           onclick="checkForMiddleClick(this, event);"/>
    <menupopup id="forwardMenu"
           position="after_start"
           onpopupshowing="return BrowserForwardMenu(event);"
           oncommand="gotoHistoryIndex(event);"
           onclick="checkForMiddleClick(this, event);"/>
    <tooltip id="aHTMLTooltip"
             onpopupshowing="return FillInHTMLTooltip(document.tooltipNode);"/>
    <menupopup id="sidebarPopup"/>

    <tooltip id="home-button-tooltip" noautohide="true">
      <vbox id="home-button-tooltip-inner" flex="1"/>
    </tooltip>

    <menupopup id="toolbar-context-menu"/>

    <menupopup id="feedsPopup" popupanchor="bottomright" popupalign="topright"
               onpopupshowing="window.XULBrowserWindow.populateFeeds(this);"
               oncommand="subscribeToFeed(event.target.statusText, event);"
               onclick="checkForMiddleClick(this, event);"/>

    <!-- for search and content formfill/pw manager -->
    <panel id="PopupAutoComplete" type="autocomplete" noautofocus="true"/>

    <!-- for invalid form error message -->
    <panel id="invalid-form-popup" noautofocus="true" hidden="true" level="parent">
      <description/>
    </panel>

    <panel id="editBookmarkPanel"/>

    <menupopup id="placesContext"/>

    <!-- Bookmarks and history tooltip -->
    <tooltip id="bhTooltip"/>

    <panel id="notification-popup"
           type="arrow"
           position="after_start"
           hidden="true"
           role="alert"/>

    <menupopup id="popupBlockerMenu"
               oncommand="popupBlockerMenuCommand(event.target);"
               onpopupshowing="return popupBlockerMenuShowing(event)"/>
    <!-- Items are generated, see popupBlockerMenuShowing() -->
    <menupopup id="popupNotificationMenu"/>
    <menupopup id="networkProperties"/>
  </popupset>

  <!-- context menu -->
  <popupset id="contentAreaContextSet"/>

  <toolbox id="navigator-toolbox" class="toolbox-top" deferattached="true"
           mode="full" defaultmode="full">
    <!-- Menu -->
    <toolbar type="menubar" id="toolbar-menubar" class="chromeclass-menubar"
             persist="collapsed" grippytooltiptext="&menuBar.tooltip;" customizable="true"
             defaultset="menubar-items"
             mode="icons" iconsize="small"
             defaultmode="icons" defaulticonsize="small"
             context="toolbar-context-menu">
      <toolbaritem id="menubar-items" class="menubar-items" align="center">
        <menubar id="main-menubar"/>
      </toolbaritem>
    </toolbar>

    <toolbar class="toolbar-primary chromeclass-toolbar" id="nav-bar" persist="collapsed" 
             grippytooltiptext="&navigationToolbar.tooltip;"
             fullscreentoolbar="true" customizable="true"
             toolbarname="&navbarCmd.label;" accesskey="&navbarCmd.accesskey;"
             defaultset="back-button,forward-button,reload-button,stop-button,nav-bar-inner,search-button-container,print-button,throbber-box,window-controls"
             context="toolbar-context-menu">

      <hbox id="window-controls" hidden="true" fullscreencontrol="true">
        <toolbarbutton id="minimize-button"
                       tooltiptext="&minimizeButton.tooltip;"
                       oncommand="window.minimize();"/>

        <toolbarbutton id="restore-button"
                       tooltiptext="&restoreButton.tooltip;"
                       oncommand="BrowserFullScreen();"/>

        <toolbarbutton id="close-button"
                       tooltiptext="&closeWindow.label;"
                       oncommand="BrowserTryToCloseWindow();"/>
      </hbox>
    </toolbar>

    <toolbarset id="customToolbars" context="toolbar-context-menu"/>

    <toolbar id="PersonalToolbar"
             accesskey="&bookmarksToolbarCmd.accesskey;"
             class="chromeclass-directories"
             persist="collapsed"
             grippytooltiptext="&bookmarksToolbar.tooltip;"
             toolbarname="&bookmarksToolbarCmd.label;"
             nowindowdrag="true"
             customizable="true"
             defaultset="home-button,separator,bookmarks-button,personal-bookmarks"
             mode="full"
             iconsize="small"
             labelalign="end"
             defaultmode="full"
             defaulticonsize="small"
             defaultlabelalign="end"
             context="toolbar-context-menu">
    </toolbar>

    <toolbarpalette id="BrowserToolbarPalette">

      <!-- Nav bar buttons -->
      <toolbarbutton id="back-button" type="menu-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional"
                     label="&backButton.label;"
                     oncommand="if (event.target==this) BrowserBack(event); else gotoHistoryIndex(event);"
                     onclick="checkForMiddleClick(this, event);"
                     context="backMenu"
                     tooltiptext="&backButton.tooltip;">
        <observes element="canGoBack" attribute="disabled"/>
        <menupopup context="" onpopupshowing="BrowserBackMenu(event);"/>
      </toolbarbutton>

      <toolbarbutton id="forward-button" type="menu-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional"
                     label="&forwardButton.label;"
                     oncommand="if (event.target==this) BrowserForward(event); else gotoHistoryIndex(event);"
                     onclick="checkForMiddleClick(this, event);"
                     context="forwardMenu"
                     tooltiptext="&forwardButton.tooltip;">
        <observes element="canGoForward" attribute="disabled"/>
        <menupopup context="" onpopupshowing="BrowserForwardMenu(event);"/>
      </toolbarbutton>

      <toolbarbutton id="reload-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional"
                     label="&reloadButton.label;"
                     oncommand="BrowserReload(event);"
                     onclick="checkForMiddleClick(this, event);"
                     tooltiptext="&reloadButton.tooltip;"/>

      <toolbarbutton id="stop-button"
                     class="toolbarbutton-1 chromeclass-toolbar-additional"
                     label="&stopButton.label;"
                     oncommand="BrowserStop();" observes="canStop"
                     disabled="true"
                     tooltiptext="&stopButton.tooltip;">
      </toolbarbutton>

      <!-- XXXRatty ? class="toolbarbutton-1 chromeclass-toolbar-additional" ? -->
      <toolbarbutton id="home-button"
                     class="toolbarbutton-1"
                     label="&homeButton.label;"
                     oncommand="BrowserHome(event);"
                     onclick="if (event.button == 1) BrowserHome(event);"
                     tooltip="home-button-tooltip"
                     ondraggesture="nsDragAndDrop.startDrag(event, homeButtonObserver)"
                     ondragdrop="nsDragAndDrop.drop(event, homeButtonObserver); event.stopPropagation()"
                     ondragenter="event.stopPropagation()"
                     ondragexit="nsDragAndDrop.dragExit(event, homeButtonObserver); event.stopPropagation()"
                     ondragover="nsDragAndDrop.dragOver(event, homeButtonObserver); event.stopPropagation()"/>

      <toolbaritem id="nav-bar-inner"
                   flex="4"
                   persist="width"
                   class="chromeclass-location nav-bar-class"
                   title="&locationBar.title;">
        <textbox id="urlbar" class="chromeclass-location uri-element" flex="1"
                 type="autocomplete" autocompletesearch="history file"
                 timeout="50" maxrows="6"
                 enablehistory="true" accesskey="&locationBar.accesskey;"
                 defaultSearchEngine="true" tabscrolling="true"
                 showcommentcolumn="true"
                 inputtooltiptext="&locationBar.tooltip;"
                 newlines="stripsurroundingwhitespace"
                 aria-label="&locationBar.title;"
                 oninput="gBrowser.userTypedValue = this.value;"
                 ontextentered="return handleURLBarCommand(eventParam, domEvent);"
                 ontextreverted="return handleURLBarRevert();"
                 onfocus="URLBarFocusHandler(event);"
                 onmousedown="URLBarMouseDownHandler(event);"
                 onclick="URLBarClickHandler(event);">
          <box id="notification-popup-box" hidden="true" align="center"
               onmousedown="event.stopPropagation();"
               onclick="event.stopPropagation();">
            <image id="default-notification-icon" class="notification-anchor-icon" role="button"/>
            <image id="geo-notification-icon" class="notification-anchor-icon" role="button"/>
            <image id="addons-notification-icon" class="notification-anchor-icon" role="button"/>
            <image id="indexedDB-notification-icon" class="notification-anchor-icon" role="button"/>
            <image id="password-notification-icon" class="notification-anchor-icon" role="button"/>
          </box>
          <deck id="page-proxy-deck"
                class="urlbar-icons"
                onclick="handlePageProxyClick(event);">
            <image id="page-proxy-button"
                   ondraggesture="PageProxyDragGesture(event);"
                   tooltiptext="&proxyIcon.tooltip;"/>
            <image id="page-proxy-favicon" validate="never"
                   ondraggesture="PageProxyDragGesture(event);"
                   onload="this.parentNode.selectedIndex = 1;
                           event.stopPropagation();"
                   onerror="gBrowser.addToMissedIconCache(this.src);"
                   tooltiptext="&proxyIcon.tooltip;"/>
          </deck>
          <hbox id="urlbar-icons" class="urlbar-icons"
                onmousedown="event.stopPropagation();"
                onclick="event.stopPropagation();">
            <image id="feedsButton" hidden="true" popup="feedsPopup"/>
            <image id="ev-button" hidden="true"
                   onclick="if (event.button == 0) BrowserPageInfo(null, 'securityTab');"/>
            <image id="star-button"
                   onclick="PlacesStarButton.onClick(event);"/>
          </hbox>
          <menupopup id="ubhist-popup" class="autocomplete-history-popup"
                     popupalign="topleft" popupanchor="bottomleft"
                     onpopupshowing="createUBHistoryMenu(event.target);"
                     oncommand="executeUrlBarHistoryCommand(event.target);"/>
        </textbox>
      </toolbaritem>

      <toolbaritem id="go-button-container"
                   class="nav-bar-class"
                   title="&goButton.label;">
        <button id="go-button"
                class="button-toolbar chromeclass-location"
                label="&goButton.label;"
                tooltiptext="&goButton.tooltip;"
                default="true"
                oncommand="handleURLBarCommand('none', event);"
                onclick="checkForMiddleClick(this, event);"
                ondragover="nsDragAndDrop.dragOver(event, goButtonObserver);"
                ondragdrop="nsDragAndDrop.drop(event, goButtonObserver);"
                ondragexit="nsDragAndDrop.dragExit(event, goButtonObserver);"/>
      </toolbaritem>

      <toolbaritem id="search-button-container"
                   class="nav-bar-class"
                   title="&searchButton.label;">
        <button id="search-button"
                class="button-toolbar chromeclass-location"
                label="&searchButton.label;"
                tooltiptext="&searchButton.tooltip;"
                oncommand="BrowserSearch.loadSearch(QualifySearchTerm());"
                ondragover="nsDragAndDrop.dragOver(event, searchButtonObserver);"
                ondragdrop="nsDragAndDrop.drop(event, searchButtonObserver);"
                ondragexit="nsDragAndDrop.dragExit(event, searchButtonObserver);"/>
      </toolbaritem>

      <toolbaritem id="search-container" title="&searchItem.title;"
                   align="center" class="chromeclass-toolbar-additional nav-bar-class"
                   flex="1" persist="width" removable="true">
        <searchbar id="searchbar" flex="1"/>
      </toolbaritem>

      <toolbarbutton id="print-button"
                     label="&printButton.label;"
                     tooltiptext="&printButton.tooltip;"/>

      <toolbaritem id="throbber-box" align="center">
        <button id="navigator-throbber"
                oncommand="goClickThrobber('browser.throbber.url', event)"
                onclick="checkForMiddleClick(this, event);"
                tooltiptext="&throbber.tooltip;"/>
      </toolbaritem>

      <!-- "Bookmarks" button on Bookmarks Toolbar -->
      <toolbarbutton type="menu" id="bookmarks-button"
                     class="bookmark-item" container="true"
                     label="&bookmarksButton.label;"
                     ondragenter="PlacesMenuDNDHandler.onDragEnter(event);"
                     ondragover="PlacesMenuDNDHandler.onDragOver(event);"
                     ondragexit="PlacesMenuDNDHandler.onDragExit(event);"
                     ondrop="PlacesMenuDNDHandler.onDrop(event);">
        <menupopup id="BMB_bookmarksPopup"
                   placespopup="true"
                   context="placesContext"
                   openInTabs="children"
                   oncommand="BookmarksEventHandler.onCommand(event);"
                   onclick="BookmarksEventHandler.onClick(event);"
                   onpopupshowing="BookmarksMenu.onPopupShowing(event, 'BMB_');
                                   BookmarksEventHandler.onPopupShowing(event);"
                   tooltip="bhTooltip" popupsinherittooltip="true">
          <menuitem command="Browser:AddBookmark"/>
          <menuitem command="Browser:AddBookmarkAs"/>
          <menuitem command="Browser:BookmarkAllTabs"/>
          <menuitem command="Browser:ManageBookmark"/>
          <menuseparator/>
          <menu id="BMB_feedsMenu" class="menu-iconic feedsMenu" command="feedsMenu"
                label="&feedsMenu.label;" accesskey="&feedsMenu.accesskey;">
            <menupopup onpopupshowing="window.XULBrowserWindow.populateFeeds(this);"
                       oncommand="subscribeToFeed(event.target.statusText, event);"
                       onclick="checkForMiddleClick(this, event);"/>
          </menu>
          <menuseparator/>
          <menu id="BMB_bookmarksToolbarFolderMenu"
                class="menu-iconic bookmark-item"
                label="&bookmarksToolbarCmd.label;"
                container="true">
            <menupopup id="BMB_bookmarksToolbarFolderPopup"
                       placespopup="true"
                       context="placesContext"
                       onpopupshowing="if (!this.parentNode._placesView)
                                         new PlacesMenu(event, 'place:folder=TOOLBAR');"/>
          </menu>
          <menu id="BMB_unsortedBookmarksFolderMenu"
                class="menu-iconic bookmark-item"
                container="true">
            <menupopup id="BMB_unsortedBookmarksFolderPopup"
                       placespopup="true"
                       context="placesContext"
                       onpopupshowing="if (!this.parentNode._placesView)
                                         new PlacesMenu(event, 'place:folder=UNFILED_BOOKMARKS');"/>
          </menu>
          <menuseparator/>
        </menupopup>
      </toolbarbutton>

      <toolbaritem flex="1" id="personal-bookmarks" title="&bookmarksToolbarItem.label;"
                   removable="true">
        <hbox flex="1"
              id="PlacesToolbar"
              context="placesContext"
              onclick="BookmarksEventHandler.onClick(event);"
              oncommand="BookmarksEventHandler.onCommand(event);"
              tooltip="bhTooltip"
              popupsinherittooltip="true">
          <toolbarbutton class="bookmark-item bookmarks-toolbar-customize"
                         mousethrough="never"
                         label="&bookmarksToolbarItem.label;"/>
          <hbox flex="1">
            <hbox align="center">
              <image id="PlacesToolbarDropIndicator"
                     mousethrough="always"
                     collapsed="true"/>
            </hbox>
            <scrollbox orient="horizontal"
                       id="PlacesToolbarItems"
                       flex="1"/>
            <toolbarbutton type="menu"
                           id="PlacesChevron"
                           class="chevron"
                           mousethrough="never"
                           collapsed="true"
                           tooltiptext="&bookmarksToolbarChevron.tooltip;"
                           onpopupshowing="this.parentNode.parentNode
                                               ._placesView._onChevronPopupShowing(event);">
              <menupopup id="PlacesChevronPopup"
                         placespopup="true"
                         tooltip="bhTooltip" popupsinherittooltip="true"
                         context="placesContext"/>
            </toolbarbutton>
          </hbox>
        </hbox>
      </toolbaritem>

      <!-- see utilityOverlay.xul -->
      <toolbarbutton id="sync-button"/>
    </toolbarpalette>
  </toolbox>

  <hbox flex="1">
    <vbox id="sidebar-box" class="chromeclass-extrachrome"/>
    <splitter id="sidebar-splitter" class="chromeclass-extrachrome" />

    <vbox id="appcontent" flex="1">
      <findbar id="FindToolbar" browserid="content"/>

      <!-- this box is temporary, pending XBLified <browser> -->
      <hbox id="browser" flex="1">
        <tabbrowser id="content"
                    flex="1" contenttooltip="aHTMLTooltip"
                    contentcontextmenu="contentAreaContextMenu"
                    onnewtab="BrowserOpenTab();"
                    onnewtabclick="checkForMiddleClick(this, event);"
                    autocompletepopup="PopupAutoComplete"
                    onbookmarkgroup="PlacesCommandHook.bookmarkCurrentPages();"
                    onclick="return contentAreaClick(event);"
                    oncommand="BrowserOnCommand(event);"/>
        <!-- The oncommand listener above lets us fix bugs like 401575 which
             require error page UI to do privileged things, without letting
             error pages have any privilege themselves. -->
      </hbox>
    </vbox>  
  </hbox>

  <panel id="customizeToolbarSheetPopup"/>

  <statusbar id="status-bar" class="chromeclass-status">
    <statusbarpanel id="component-bar"/>
    <statusbarpanel id="statusbar-display" label="&statusText.label;" flex="1"/>
    <statusbarpanel class="statusbarpanel-progress" id="statusbar-progresspanel" collapsed="true">
      <progressmeter class="progressmeter-statusbar" id="statusbar-icon" mode="normal" value="0"/>
    </statusbarpanel>
    <statusbarpanel id="popupIcon" class="statusbarpanel-iconic" hidden="true"
                    oncommand="StatusbarViewPopupManager()"
                    tooltiptext="&popupIcon.tooltiptext;"
                    context="popupBlockerMenu"/>
    <statusbarpanel class="statusbarpanel-iconic" id="offline-status"/>
    <statusbarpanel class="statusbarpanel-backgroundbox"
                    id="security-button" dir="reverse"
                    oncommand="BrowserPageInfo(null, 'securityTab')"/>
  </statusbar> 
</window>
