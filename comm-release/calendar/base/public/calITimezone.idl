/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Sun Microsystems code.
 *
 * The Initial Developer of the Original Code is
 *   Sun Microsystems, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Daniel Boelzle <daniel.boelzle@sun.com>
 *   Clint Talbert <ctalbert@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface calIIcalComponent;
interface calITimezoneProvider;

[scriptable, uuid(D79161E7-0DB9-427d-A0C3-27E0DB3B030F)]
interface calITimezone : nsISupports
{
    /**
     * The timezone provider this timezone belongs to, if any.
     */
    readonly attribute calITimezoneProvider provider;

    /**
     * VTIMEZONE ical component, null if floating or UTC.
     */
    readonly attribute calIIcalComponent icalComponent;

    /**
     * The TZID of this timezone.
     */
    readonly attribute AUTF8String tzid;

    /**
     * Whether this timezone is the "floating" timezone.
     */
    readonly attribute boolean isFloating;

    /**
     * Whether this is the "UTC" timezone.
     */
    readonly attribute boolean isUTC;

    /**
     * Latitude of timezone or void/null if unknown.
     */
    readonly attribute AUTF8String latitude;

    /**
     * Longitude of timezone or void/null if unknown.
     */
    readonly attribute AUTF8String longitude;

    /**
     * Localized name of the timezone; falls back to TZID if unknown.
     */
    readonly attribute AString displayName;

    /**
     * For debugging purposes.
     *
     * @return "UTC", "floating" or component's ical representation
     */
    AUTF8String toString();
};

