/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Sun Microsystems code.
 *
 * The Initial Developer of the Original Code is
 *   Sun Microsystems, Inc.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Daniel Boelzle <daniel.boelzle@sun.com>
 *   Clint Talbert <ctalbert@mozilla.com>
 *   Philipp Kewisch <mozilla@kewis.ch>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIUTF8StringEnumerator;
interface calITimezone;

[scriptable, uuid(0E502BF5-4FD3-4090-9122-F1EC3CA701BB)]
interface calITimezoneProvider : nsISupports
{
    readonly attribute nsIUTF8StringEnumerator timezoneIds;

    /**
     * Gets a timezone defintion passing a TZID.
     * Returns null in case of an unknown TZID.
     *
     * @param tzid       a TZID to be resolved
     * @return           a timezone object or null
     */
    calITimezone getTimezone(in AUTF8String tzid);
};

/**
 * This service acts as a central access point for the up to date set
 * of Olson timezone definitions.
 */
[scriptable, uuid(AB1BFE6A-EE95-4038-B594-34AEEDA9911A)]
interface calITimezoneService : calITimezoneProvider
{
    readonly attribute calITimezone floating;
    readonly attribute calITimezone UTC;

    /**
     * Provides the version of the underlying timezone database.
     */
    readonly attribute AString version;

    /**
     * Returns the default timezone from calendar.timezone.local. If no timezone
     * has been set, a best guess is taken from the operating system and the
     * timezone is saved into the above mentioned pref.
     */
    readonly attribute calITimezone defaultTimezone;
};
