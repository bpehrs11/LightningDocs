/* -*- Mode: idl; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla calendar code.
 *
 * The Initial Developer of the Original Code is
 *  Michiel van Leeuwen <michiel@exedo.nl>
 * Portions created by the Initial Developer are Copyright (C) 2006
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface calIDateTime;
interface calIDuration;

[ptr] native icalperiodtypeptr(struct icalperiodtype);

[scriptable,uuid(03cde9c7-c864-4109-8bea-ebbff01cbab9)]
interface calIPeriod : nsISupports
{
  /**
   * isMutable is true if this instance is modifiable.
   * If isMutable is false, any attempts to modify
   * the object will throw NS_ERROR_OBJECT_IS_IMMUTABLE.
   */
  readonly attribute boolean isMutable;

  /**
   * Make this calIPeriod instance immutable.
   */
  void makeImmutable();

  /**
   * Clone this calIPeriod instance into a new
   * mutable object.
   */
  calIPeriod clone();

  /**
   * The start datetime of this period
   */
  attribute calIDateTime start;

  /**
   * The end datetime of this period
   */
  attribute calIDateTime end;

  /**
   * The duration, equal to end-start
   */
  readonly attribute calIDuration duration;


  /**
   * Return a string representation of this instance.
   */
  AUTF8String toString();

  [noscript,notxpcom] void toIcalPeriod(in icalperiodtypeptr idt);

  /**
   * This object as an iCalendar DURATION string
   */
  attribute ACString icalString;
};
