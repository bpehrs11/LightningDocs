/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Oracle Corporation code.
 *
 * The Initial Developer of the Original Code is Oracle Corporation
 * Portions created by the Initial Developer are Copyright (C) 2005
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Stuart Parmenter <stuart.parmenter@oracle.com>
 *   Daniel Boelzle <daniel.boelzle@sun.com>
 *   Philipp Kewisch <mozilla@kewis.ch>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface calIItemBase;
interface calICalendar;
interface calIDuration;
interface calITimezone;
interface calIAlarm;
interface calIOperation;

[scriptable,uuid(c9c97643-db45-4790-9441-05384ae5c272)]
interface calIAlarmServiceObserver : nsISupports
{
  /**
   * Gets called when an alarm has fired. Depending on type of alarm, an
   * observer could bring up a dialog or play a sound.
   */
  void onAlarm(in calIItemBase item, in calIAlarm alarm);

  /**
   * Called if alarm(s) of a specific item are to be removed from
   * the alarm window.
   *
   * @param aItem corresponding item, maybe master item of recurring
   *              series (then all alarms belonging to this item are to
   *              be removed)
   */
  void onRemoveAlarmsByItem(in calIItemBase item);

  /**
   * Called if all alarms of a specific calendar are to be removed.
   */
  void onRemoveAlarmsByCalendar(in calICalendar calendar);
};

[scriptable,uuid(03669cf3-bf4f-4692-97a1-cca891964a1d)]
interface calIAlarmService : nsISupports
{
  /**
   * This is the timezone that all-day events will be converted to in order to
   * determine when their alarms should fire.
   */
  attribute calITimezone timezone;

  /**
   * Cause the alarm service to start up, create a list of upcoming
   * alarms in all registered calendars, add observers to watch for
   * calendar registration and unregistration, and setup a timer to
   * maintain that list and fire alarms.
   *
   * @note Will throw NS_ERROR_NOT_INITIALIZED if you have not previously set
   *       the timezone attribute.
   */
  void startup();

  /**
   * Shuts down the alarm service, canceling all timers and removing all
   * alarms.
   */
  void shutdown();

  /* add and remove observers that will be notified when an
     alarm has gone off.  It is up to the application to display
     the alarm.
  */
  void addObserver(in calIAlarmServiceObserver observer);
  void removeObserver(in calIAlarmServiceObserver observer);

  /**
   * Call to reschedule an alarm to be notified at a later point. The alarm will
   * instead fire at "now + duration" This will cause an event to be scheduled
   * even if it was not previously scheduled.
   *
   * @param item            The item the alarm belongs to.
   * @param alarm           The alarm to snooze.
   * @param duration        The duration in minutes to snooze for.
   * @return                The operation that modifies the item to snooze the
   *                        alarm.
   */
  calIOperation snoozeAlarm(in calIItemBase item, in calIAlarm alarm, in calIDuration duration);

  /**
   * Dismisses the given alarm for the passed occurrence.
   *
   * @param item            The item the alarm belongs to.
   * @param alarm           The alarm to dismiss.
   * @return                The operation that modifies the item to dismiss the
   *                        alarm.
   */
  calIOperation dismissAlarm(in calIItemBase item, in calIAlarm alarm);
};
