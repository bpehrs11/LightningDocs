<?xml version="1.0"?>
<!--
 - ***** BEGIN LICENSE BLOCK *****
 - Version: MPL 1.1/GPL 2.0/LGPL 2.1
 -
 - The contents of this file are subject to the Mozilla Public License Version
 - 1.1 (the "License"); you may not use this file except in compliance with
 - the License. You may obtain a copy of the License at
 - http://www.mozilla.org/MPL/
 -
 - Software distributed under the License is distributed on an "AS IS" basis,
 - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 - for the specific language governing rights and limitations under the
 - License.
 -
 - The Original Code is Mozilla Communicator client code, released
 - March 31, 1998.
 -
 - The Initial Developer of the Original Code is
 - Netscape Communications Corporation.
 - Portions created by the Initial Developer are Copyright (C) 1998-1999
 - the Initial Developer. All Rights Reserved.
 -
 - Contributor(s):
 -   Karsten DÃ¼sterloh <mnyromyr@tprac.de>
 -   Simon Paquet <bugzilla@babylonsounds.com>
 -
 - Alternatively, the contents of this file may be used under the terms of
 - either the GNU General Public License Version 2 or later (the "GPL"), or
 - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 - in which case the provisions of the GPL or the LGPL are applicable instead
 - of those above. If you wish to allow use of your version of this file only
 - under the terms of either the GPL or the LGPL, and not to allow others to
 - use your version of this file under the terms of the MPL, indicate your
 - and other provisions required by the GPL or the LGPL. If you do not delete
 - the provisions above, a recipient may use your version of this file under
 - the terms of any one of the MPL, the GPL or the LGPL.
 -
 - ***** END LICENSE BLOCK *****
 -->

<!DOCTYPE overlay [
  <!ENTITY % messengerDTD SYSTEM "chrome://messenger/locale/messenger.dtd">
  %messengerDTD;
  <!ENTITY % msgViewPickerDTD SYSTEM "chrome://messenger/locale/msgViewPickerOverlay.dtd" >
  %msgViewPickerDTD;
  <!ENTITY % msgFolderPickerDTD SYSTEM "chrome://messenger/locale/msgFolderPickerOverlay.dtd" >
  %msgFolderPickerDTD;
  <!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd">
  %brandDTD;
]>

<?xml-stylesheet href="chrome://messenger/skin/searchBox.css" type="text/css"?>

<overlay xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <popupset>
    <panel type="glodacomplete-richlistbox"
           id="PopupGlodaAutocomplete" noautofocus="true" />
  </popupset>

  <toolbarpalette id="MailToolbarPalette">
    <!-- gloda search widget; provides global (message) searching.  -->
    <toolbaritem id="gloda-search" insertafter="button-stop"
                 title="&glodaSearch.title;"
                 align="center"
                 flex="1"
                 class="chromeclass-toolbar-additional">
        <textbox id="searchInput" 
                 flex="1"
                 type="glodacomplete"
                 searchbutton="true"
                 autocompletesearch="gloda"
                 autocompletepopup="PopupGlodaAutocomplete"
                 autocompletesearchparam="global"
                 enablehistory="false"
                 timeout="200"
                 maxlength="192"
                 placeholder=""
                 emptytextbase="&search.label.base;"
                 keyLabelNonMac="&search.keyLabel.nonmac;"
                 keyLabelMac="&search.keyLabel.mac;"
                 >
          <!-- Mimic the search/clear buttons of the standard search textbox,
               but adjust for the reality that clear doesn't make much sense
               since gloda results only show in a tab and the idiom for closing
               tabs is closing the tab.  Our binding does process escape to
               clear the box, if people want to clear it that way...
               -->
          <hbox>
            <image class="gloda-search-icon"
                   onclick="document.getElementById('searchInput').doSearch();"
                   />
          </hbox>
        </textbox>
    </toolbaritem>

    <toolbarbutton id="button-compact" class="toolbarbutton-1"
                   insertafter="button-mark"
                   label="&compactButton.label;"
                   tooltiptext="&compactButton.tooltip;"
                   oncommand="goDoCommand('button_compact');"
                   observes="button_compact"/>
    <toolbaritem id="folder-location-container" insert-after="button-stop"
                 title="&folderLocationToolbarItem.title;"
                 align="center"
                 class="chromeclass-toolbar-additional">
      <menulist id="locationFolders"
                class="folderMenuItem"
                label=" "
                context="folderPaneContext"
                width="170"
                crop="center">
        <menupopup id="folderLocationPopup"
                   class="folderLocationPopup"
                   type="folder"
                   flex="1"
                   fileHereLabel="&filemessageschoosethis.label;"
                   showFileHereLabel="true"
                   oncommand="gFolderTreeView.selectFolder(event.target._folder);"/>
      </menulist>
    </toolbaritem>
    <toolbaritem id="mailviews-container"
                 title="&mailViewsToolbarItem.title;"
                 align="center"
                 class="chromeclass-toolbar-additional">
      <label id="viewPickerLabel"
             value="&viewPicker.label;"
             control="viewPicker"
             accesskey="&viewPicker.accesskey;"/>
      <menulist id="viewPicker" oncommand="ViewChangeByMenuitem(event.target);">
        <menupopup id="viewPickerPopup" onpopupshowing="RefreshViewPopup(this);">
          <menuitem id="viewPickerAll" value="0"
                    label="&viewAll.label;"
                    type="radio"/>
          <menuitem id="viewPickerUnread" value="1"
                    label="&viewUnread.label;"
                    type="radio"/>
          <menuitem id="viewPickerNotDeleted" value="3"
                    label="&viewNotDeleted.label;"
                    type="radio"/>
          <menuseparator id="afterViewPickerUnreadSeparator"/>
          <menu id="viewPickerTags" label="&viewTags.label;">
            <menupopup id="viewPickerTagsPopup"
                       class="menulist-menupopup"
                       onpopupshowing="RefreshTagsPopup(this, true);"/>
          </menu>
          <menu id="viewPickerCustomViews" label="&viewCustomViews.label;">
            <menupopup id="viewPickerCustomViewsPopup"
                       class="menulist-menupopup"
                       onpopupshowing="RefreshCustomViewsPopup(this, true);"/>
          </menu>
          <menuseparator id="afterViewPickerCustomViewsSeparator"/>
          <menuitem id="viewPickerVirtualFolder"
                    value="7"
                    label="&viewVirtualFolder.label;"/>
          <menuitem id="viewPickerCustomize"
                    value="8"
                    label="&viewCustomizeView.label;"/>
        </menupopup>
      </menulist>
    </toolbaritem>

  </toolbarpalette>
</overlay>
