/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

[scriptable, uuid(444e0d79-874d-4174-b7f3-189db317473c)]
interface nsIImapFlagAndUidState : nsISupports 
{
  readonly attribute long numberOfMessages;
  readonly attribute long numberOfRecentMessages;

  /**
   * If a full update, the total number of deleted messages
   * in the folder; if a partial update, the number of deleted
   * messages in the partial update
   **/
  readonly attribute long numberOfDeletedMessages;

  /**
   * If this is true, instead of fetching 1:* (FLAGS), and putting all
   * UIDs and flags in the array, we only fetched the uids and flags
   * that changed since the last time we were selected on this folder.
   * This means we have a sparse array, and should not assume missing
   * UIDs have been deleted.
   **/
  readonly attribute boolean partialUIDFetch;

  /**
   * Set of flags the server supports storing per message. See nsImapCore.h
   * for the set of flags.
   */
  readonly attribute unsigned short supportedUserFlags;

  /**
   * OR's the  passed in flags with the previous flags because we want to
   * accumulate the FLAGS and PERMANENTFLAGS response.
   *
   * @param aFlags - flags to OR with current flags.
   */
  void orSupportedUserFlags(in unsigned short aFlags);

  void getUidOfMessage(in long zeroBasedIndex, out unsigned long result);
  void getMessageFlags(in long zeroBasedIndex, out unsigned short result);
  void setMessageFlags(in long zeroBasedIndex, in unsigned short flags);
  void expungeByIndex(in unsigned long zeroBasedIndex);
  void addUidFlagPair(in unsigned long uid, in unsigned short flags, in unsigned long zeroBasedIndex);
  void addUidCustomFlagPair(in unsigned long uid, in string customFlag);
  string getCustomFlags(in unsigned long uid); // returns space-separated keywords
  void reset();
  void clearCustomFlags(in unsigned long uid);
};

