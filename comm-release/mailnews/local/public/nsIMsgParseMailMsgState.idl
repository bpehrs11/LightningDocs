/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsIMsgDatabase;
interface nsIMsgDBHdr;
interface nsIOutputStream;

%{C++
#include "nsIMsgDatabase.h"
#include "nsIMsgHdr.h"
%}

typedef long nsMailboxParseState;

[scriptable, uuid(abf6a8e2-955e-4952-a295-b71d45f770cf)]
interface nsIMsgParseMailMsgState : nsISupports {

    attribute unsigned long envelopePos;
    void SetMailDB(in nsIMsgDatabase aDatabase);
    /*
     * Set a backup mail database, whose data will be read during parsing to
     * attempt to recover message metadata
     *
     * @param aDatabase   the backup database
     */
    void SetBackupMailDB(in nsIMsgDatabase aDatabase);
    void Clear();

    void ParseAFolderLine(in string line, in unsigned long lineLength);
    /// db header for message we're currently parsing
    attribute nsIMsgDBHdr newMsgHdr;
    void FinishHeader();

    long GetAllHeaders(out string headers);
    readonly attribute string headers;
  attribute nsMailboxParseState state;
    /* these are nsMailboxParseState */
    const long ParseEnvelopeState=0;
    const long ParseHeadersState=1;
    const long ParseBodyState=2;
};

