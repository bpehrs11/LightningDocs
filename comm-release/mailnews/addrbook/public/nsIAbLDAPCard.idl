/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Mark Banner <bugzilla@standard8.plus.com>
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Jeremy Laine <jeremy.laine@m4x.org>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */
 
#include "nsIAbCard.idl"

interface nsIAbLDAPAttributeMap;
interface nsILDAPModification;
interface nsILDAPMessage;
interface nsIArray;

[scriptable, uuid(2831b3b0-30ef-4070-8ad3-90ae04980e11)]
interface nsIAbLDAPCard : nsISupports
{
  /**
   * Returns the required information for an LDAP update message.
   *
   * @param  aAttrMap    The map between LDAP attributes and card properties
   * @param  aClassCount The number of objectClass values
   * @param  aClasses    The objectClass values that the card needs to have
   * @param  updateType  This should be one of:
   *                         nsILDAPModification::MOD_ADD
   *                         nsILDAPModification::MOD_REPLACE
   *
   * @return             Returns an array of modifications required to
   *                     add or replace the card in the ldap directory.
   */
  nsIArray getLDAPMessageInfo(in nsIAbLDAPAttributeMap aAttrMap,
                              in unsigned long aClassCount,
                              [array, size_is(aClassCount)] in string aClasses,
                              in long updateType);

  /**
   * Builds a relative distinguished name (RDN) with the given set of
   * attributes.
   *
   * @param  aAttrMap    The map between LDAP attributes and card properties
   * @param  aAttrCount  The number of attributes to use for the RDN
   * @param  aAttributes The name of the attributes to use for the RDN
   *
   */
  ACString buildRdn(in nsIAbLDAPAttributeMap aAttrMap,
                    in unsigned long aAttrCount,
                    [array, size_is(aAttrCount)] in string aAttributes);
  
  /**
   * Stores meta-properties from a raw LDAP search result.
   *
   * @param aMessage     The LDAP search result message.
   *
   */
  void setMetaProperties(in nsILDAPMessage aMessage);

  attribute ACString dn;
};
