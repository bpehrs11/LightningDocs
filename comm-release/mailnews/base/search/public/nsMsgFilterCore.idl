/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "MailNewsTypes2.idl"
#include "nsMsgSearchCore.idl"


typedef long nsMsgFilterTypeType;

[scriptable,uuid(7d368017-e7b4-446c-98ee-e3e256741947)]
interface nsMsgFilterType {
    /* these longs are all actually of type nsMsgFilterTypeType */
  const long None             = 0x00;
  const long InboxRule        = 0x01;
  const long InboxJavaScript  = 0x02;
  const long Inbox            = InboxRule | InboxJavaScript;
  const long NewsRule         = 0x04;
  const long NewsJavaScript   = 0x08;
  const long News             = NewsRule | NewsJavaScript;
  const long Incoming         = Inbox | News;
  const long Manual           = 0x10;
  const long PostPlugin       = 0x20; // After bayes filtering
  const long All              = Incoming | Manual;
};

typedef long nsMsgFilterMotionValue;

typedef long nsMsgFilterIndex;

typedef long nsMsgRuleActionType;

[scriptable, uuid(7726FE79-AFA3-4a39-8292-733AEE288737)]
interface nsMsgFilterAction {

    // Custom Action.
    const long Custom=-1;
    /* if you change these, you need to update filter.properties,
       look for filterActionX */
    /* these longs are all actually of type nsMsgFilterActionType */
    const long None=0;        /* uninitialized state */
    const long MoveToFolder=1;
    const long ChangePriority=2;
    const long Delete=3;
    const long MarkRead=4;
    const long KillThread=5;
    const long WatchThread=6;
    const long MarkFlagged=7;
    const long Label=8;
    const long Reply=9;
    const long Forward=10;
    const long StopExecution=11;
    const long DeleteFromPop3Server=12;
    const long LeaveOnPop3Server=13;
    const long JunkScore=14;
    const long FetchBodyFromPop3Server=15;
    const long CopyToFolder=16;
    const long AddTag=17;
    const long KillSubthread=18;
    const long MarkUnread=19;
};

