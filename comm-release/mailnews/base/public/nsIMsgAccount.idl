/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIMsgIncomingServer.idl"
#include "nsIMsgIdentity.idl"
#include "nsISupportsArray.idl"

/**
 * An account consists of an incoming server and one or more
 * outgoing identities. An account is identified by a key,
 * which is the <account> string in the account preferences,
 * such as in mail.account.<account>.identities.
 */

[scriptable, uuid(3FE5B45D-ACF8-4348-8951-757D21E983F2)]
interface nsIMsgAccount : nsISupports {

  /**
   * Initialize an account.
   *
   * @throws NS_ERROR_ALREADY_OPENED if it is called more then once.
   */
  void init();

  /// Internal key identifying itself
  attribute ACString key;

  /// Incoming server stuff
  attribute nsIMsgIncomingServer incomingServer;

  /// Outgoing identity list (array of nsIMsgIdentity's)
  readonly attribute nsISupportsArray identities;

  /// The default identity for this account.
  attribute nsIMsgIdentity defaultIdentity;

  /// Add a new identity to this account
  void addIdentity(in nsIMsgIdentity identity);

  /// Remove an identity from this account
  void removeIdentity(in nsIMsgIdentity identity);

  /// Clear all user preferences associated with an account.
  void clearAllValues();

  /// Name in javascript
  AString toString();
};
